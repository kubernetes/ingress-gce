// +build !ignore_autogenerated

/*
Copyright 2020 The Kubernetes Authors.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by openapi-gen. DO NOT EDIT.

// This file was autogenerated by openapi-gen. Do not edit it manually!

package v1alpha1

import (
	spec "github.com/go-openapi/spec"
	common "k8s.io/kube-openapi/pkg/common"
)

func GetOpenAPIDefinitions(ref common.ReferenceCallback) map[string]common.OpenAPIDefinition {
	return map[string]common.OpenAPIDefinition{
		"k8s.io/ingress-gce/pkg/apis/workload/v1alpha1.Workload":       schema_pkg_apis_workload_v1alpha1_Workload(ref),
		"k8s.io/ingress-gce/pkg/apis/workload/v1alpha1.WorkloadSpec":   schema_pkg_apis_workload_v1alpha1_WorkloadSpec(ref),
		"k8s.io/ingress-gce/pkg/apis/workload/v1alpha1.WorkloadStatus": schema_pkg_apis_workload_v1alpha1_WorkloadStatus(ref),
	}
}

func schema_pkg_apis_workload_v1alpha1_Workload(ref common.ReferenceCallback) common.OpenAPIDefinition {
	return common.OpenAPIDefinition{
		Schema: spec.Schema{
			SchemaProps: spec.SchemaProps{
				Type: []string{"object"},
				Properties: map[string]spec.Schema{
					"kind": {
						SchemaProps: spec.SchemaProps{
							Description: "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
							Type:        []string{"string"},
							Format:      "",
						},
					},
					"apiVersion": {
						SchemaProps: spec.SchemaProps{
							Description: "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
							Type:        []string{"string"},
							Format:      "",
						},
					},
					"metadata": {
						SchemaProps: spec.SchemaProps{
							Ref: ref("k8s.io/apimachinery/pkg/apis/meta/v1.ObjectMeta"),
						},
					},
					"spec": {
						SchemaProps: spec.SchemaProps{
							Ref: ref("k8s.io/ingress-gce/pkg/apis/workload/v1alpha1.WorkloadSpec"),
						},
					},
					"status": {
						SchemaProps: spec.SchemaProps{
							Ref: ref("k8s.io/ingress-gce/pkg/apis/workload/v1alpha1.WorkloadStatus"),
						},
					},
				},
			},
		},
		Dependencies: []string{
			"k8s.io/apimachinery/pkg/apis/meta/v1.ObjectMeta", "k8s.io/ingress-gce/pkg/apis/workload/v1alpha1.WorkloadSpec", "k8s.io/ingress-gce/pkg/apis/workload/v1alpha1.WorkloadStatus"},
	}
}

func schema_pkg_apis_workload_v1alpha1_WorkloadSpec(ref common.ReferenceCallback) common.OpenAPIDefinition {
	return common.OpenAPIDefinition{
		Schema: spec.Schema{
			SchemaProps: spec.SchemaProps{
				Description: "WorkloadSpec is the spec for a Workload resource",
				Type:        []string{"object"},
				Properties: map[string]spec.Schema{
					"instanceName": {
						SchemaProps: spec.SchemaProps{
							Type:   []string{"string"},
							Format: "",
						},
					},
					"hostName": {
						SchemaProps: spec.SchemaProps{
							Type:   []string{"string"},
							Format: "",
						},
					},
					"locality": {
						SchemaProps: spec.SchemaProps{
							Type:   []string{"string"},
							Format: "",
						},
					},
					"ip": {
						SchemaProps: spec.SchemaProps{
							Type:   []string{"string"},
							Format: "",
						},
					},
				},
				Required: []string{"instanceName", "hostName", "locality", "ip"},
			},
		},
	}
}

func schema_pkg_apis_workload_v1alpha1_WorkloadStatus(ref common.ReferenceCallback) common.OpenAPIDefinition {
	return common.OpenAPIDefinition{
		Schema: spec.Schema{
			SchemaProps: spec.SchemaProps{
				Description: "WorkloadStatus is the status for a Workload resource",
				Type:        []string{"object"},
				Properties: map[string]spec.Schema{
					"heartbeat": {
						SchemaProps: spec.SchemaProps{
							Description: "Last time the workload updated its status.",
							Type:        []string{"string"},
							Format:      "",
						},
					},
					"ping": {
						SchemaProps: spec.SchemaProps{
							Description: "Last time the controller successfully pinged the workload.",
							Type:        []string{"string"},
							Format:      "",
						},
					},
				},
			},
		},
	}
}
