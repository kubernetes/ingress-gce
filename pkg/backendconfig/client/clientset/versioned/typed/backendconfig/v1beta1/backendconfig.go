/*
Copyright 2025 The Kubernetes Authors.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by client-gen. DO NOT EDIT.

package v1beta1

import (
	"context"

	v1 "k8s.io/apimachinery/pkg/apis/meta/v1"
	types "k8s.io/apimachinery/pkg/types"
	watch "k8s.io/apimachinery/pkg/watch"
	gentype "k8s.io/client-go/gentype"
	v1beta1 "k8s.io/ingress-gce/pkg/apis/backendconfig/v1beta1"
	scheme "k8s.io/ingress-gce/pkg/backendconfig/client/clientset/versioned/scheme"
)

// BackendConfigsGetter has a method to return a BackendConfigInterface.
// A group's client should implement this interface.
type BackendConfigsGetter interface {
	BackendConfigs(namespace string) BackendConfigInterface
}

// BackendConfigInterface has methods to work with BackendConfig resources.
type BackendConfigInterface interface {
	Create(ctx context.Context, backendConfig *v1beta1.BackendConfig, opts v1.CreateOptions) (*v1beta1.BackendConfig, error)
	Update(ctx context.Context, backendConfig *v1beta1.BackendConfig, opts v1.UpdateOptions) (*v1beta1.BackendConfig, error)
	Delete(ctx context.Context, name string, opts v1.DeleteOptions) error
	DeleteCollection(ctx context.Context, opts v1.DeleteOptions, listOpts v1.ListOptions) error
	Get(ctx context.Context, name string, opts v1.GetOptions) (*v1beta1.BackendConfig, error)
	List(ctx context.Context, opts v1.ListOptions) (*v1beta1.BackendConfigList, error)
	Watch(ctx context.Context, opts v1.ListOptions) (watch.Interface, error)
	Patch(ctx context.Context, name string, pt types.PatchType, data []byte, opts v1.PatchOptions, subresources ...string) (result *v1beta1.BackendConfig, err error)
	BackendConfigExpansion
}

// backendConfigs implements BackendConfigInterface
type backendConfigs struct {
	*gentype.ClientWithList[*v1beta1.BackendConfig, *v1beta1.BackendConfigList]
}

// newBackendConfigs returns a BackendConfigs
func newBackendConfigs(c *CloudV1beta1Client, namespace string) *backendConfigs {
	return &backendConfigs{
		gentype.NewClientWithList[*v1beta1.BackendConfig, *v1beta1.BackendConfigList](
			"backendconfigs",
			c.RESTClient(),
			scheme.ParameterCodec,
			namespace,
			func() *v1beta1.BackendConfig { return &v1beta1.BackendConfig{} },
			func() *v1beta1.BackendConfigList { return &v1beta1.BackendConfigList{} }),
	}
}
