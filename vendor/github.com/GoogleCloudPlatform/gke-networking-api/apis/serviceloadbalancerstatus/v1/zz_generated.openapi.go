//go:build !ignore_autogenerated
// +build !ignore_autogenerated

/*
Copyright 2024 The Kubernetes Authors.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    https://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by openapi-gen. DO NOT EDIT.

package v1

import (
	common "k8s.io/kube-openapi/pkg/common"
	spec "k8s.io/kube-openapi/pkg/validation/spec"
)

func GetOpenAPIDefinitions(ref common.ReferenceCallback) map[string]common.OpenAPIDefinition {
	return map[string]common.OpenAPIDefinition{
		"github.com/GoogleCloudPlatform/gke-networking-api/apis/serviceloadbalancerstatus/v1.ServiceLoadBalancerStatus":       schema_gke_networking_api_apis_serviceloadbalancerstatus_v1_ServiceLoadBalancerStatus(ref),
		"github.com/GoogleCloudPlatform/gke-networking-api/apis/serviceloadbalancerstatus/v1.ServiceLoadBalancerStatusList":   schema_gke_networking_api_apis_serviceloadbalancerstatus_v1_ServiceLoadBalancerStatusList(ref),
		"github.com/GoogleCloudPlatform/gke-networking-api/apis/serviceloadbalancerstatus/v1.ServiceLoadBalancerStatusSpec":   schema_gke_networking_api_apis_serviceloadbalancerstatus_v1_ServiceLoadBalancerStatusSpec(ref),
		"github.com/GoogleCloudPlatform/gke-networking-api/apis/serviceloadbalancerstatus/v1.ServiceLoadBalancerStatusStatus": schema_gke_networking_api_apis_serviceloadbalancerstatus_v1_ServiceLoadBalancerStatusStatus(ref),
		"github.com/GoogleCloudPlatform/gke-networking-api/apis/serviceloadbalancerstatus/v1.ServiceReference":                schema_gke_networking_api_apis_serviceloadbalancerstatus_v1_ServiceReference(ref),
	}
}

func schema_gke_networking_api_apis_serviceloadbalancerstatus_v1_ServiceLoadBalancerStatus(ref common.ReferenceCallback) common.OpenAPIDefinition {
	return common.OpenAPIDefinition{
		Schema: spec.Schema{
			SchemaProps: spec.SchemaProps{
				Description: "ServiceLoadBalancerStatus holds the mapping between a GKE Service and the GCE resources it configures.",
				Type:        []string{"object"},
				Properties: map[string]spec.Schema{
					"kind": {
						SchemaProps: spec.SchemaProps{
							Description: "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
							Type:        []string{"string"},
							Format:      "",
						},
					},
					"apiVersion": {
						SchemaProps: spec.SchemaProps{
							Description: "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
							Type:        []string{"string"},
							Format:      "",
						},
					},
					"metadata": {
						SchemaProps: spec.SchemaProps{
							Default: map[string]interface{}{},
							Ref:     ref("k8s.io/apimachinery/pkg/apis/meta/v1.ObjectMeta"),
						},
					},
					"spec": {
						SchemaProps: spec.SchemaProps{
							Description: "Spec defines the desired state of ServiceLoadBalancerStatus.",
							Default:     map[string]interface{}{},
							Ref:         ref("github.com/GoogleCloudPlatform/gke-networking-api/apis/serviceloadbalancerstatus/v1.ServiceLoadBalancerStatusSpec"),
						},
					},
					"status": {
						SchemaProps: spec.SchemaProps{
							Description: "Status defines the observed state of ServiceLoadBalancerStatus.",
							Default:     map[string]interface{}{},
							Ref:         ref("github.com/GoogleCloudPlatform/gke-networking-api/apis/serviceloadbalancerstatus/v1.ServiceLoadBalancerStatusStatus"),
						},
					},
				},
			},
		},
		Dependencies: []string{
			"github.com/GoogleCloudPlatform/gke-networking-api/apis/serviceloadbalancerstatus/v1.ServiceLoadBalancerStatusSpec", "github.com/GoogleCloudPlatform/gke-networking-api/apis/serviceloadbalancerstatus/v1.ServiceLoadBalancerStatusStatus", "k8s.io/apimachinery/pkg/apis/meta/v1.ObjectMeta"},
	}
}

func schema_gke_networking_api_apis_serviceloadbalancerstatus_v1_ServiceLoadBalancerStatusList(ref common.ReferenceCallback) common.OpenAPIDefinition {
	return common.OpenAPIDefinition{
		Schema: spec.Schema{
			SchemaProps: spec.SchemaProps{
				Description: "ServiceLoadBalancerStatusList contains a list of ServiceLoadBalancerStatus.",
				Type:        []string{"object"},
				Properties: map[string]spec.Schema{
					"kind": {
						SchemaProps: spec.SchemaProps{
							Description: "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
							Type:        []string{"string"},
							Format:      "",
						},
					},
					"apiVersion": {
						SchemaProps: spec.SchemaProps{
							Description: "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
							Type:        []string{"string"},
							Format:      "",
						},
					},
					"metadata": {
						SchemaProps: spec.SchemaProps{
							Default: map[string]interface{}{},
							Ref:     ref("k8s.io/apimachinery/pkg/apis/meta/v1.ListMeta"),
						},
					},
					"items": {
						SchemaProps: spec.SchemaProps{
							Description: "Items is the list of ServiceLoadBalancerStatus.",
							Type:        []string{"array"},
							Items: &spec.SchemaOrArray{
								Schema: &spec.Schema{
									SchemaProps: spec.SchemaProps{
										Default: map[string]interface{}{},
										Ref:     ref("github.com/GoogleCloudPlatform/gke-networking-api/apis/serviceloadbalancerstatus/v1.ServiceLoadBalancerStatus"),
									},
								},
							},
						},
					},
				},
				Required: []string{"items"},
			},
		},
		Dependencies: []string{
			"github.com/GoogleCloudPlatform/gke-networking-api/apis/serviceloadbalancerstatus/v1.ServiceLoadBalancerStatus", "k8s.io/apimachinery/pkg/apis/meta/v1.ListMeta"},
	}
}

func schema_gke_networking_api_apis_serviceloadbalancerstatus_v1_ServiceLoadBalancerStatusSpec(ref common.ReferenceCallback) common.OpenAPIDefinition {
	return common.OpenAPIDefinition{
		Schema: spec.Schema{
			SchemaProps: spec.SchemaProps{
				Description: "ServiceLoadBalancerStatusSpec defines the desired state of ServiceLoadBalancerStatus.",
				Type:        []string{"object"},
				Properties: map[string]spec.Schema{
					"serviceRef": {
						SchemaProps: spec.SchemaProps{
							Description: "ServiceRef is a reference to the Kubernetes Service that this ServiceLoadBalancerStatus is associated with.",
							Default:     map[string]interface{}{},
							Ref:         ref("github.com/GoogleCloudPlatform/gke-networking-api/apis/serviceloadbalancerstatus/v1.ServiceReference"),
						},
					},
					"gceResources": {
						VendorExtensible: spec.VendorExtensible{
							Extensions: spec.Extensions{
								"x-kubernetes-list-type": "set",
							},
						},
						SchemaProps: spec.SchemaProps{
							Description: "GceResources is a list of URLs for GCE resources provisioned and managed by the GKE controller for the referenced Service.",
							Type:        []string{"array"},
							Items: &spec.SchemaOrArray{
								Schema: &spec.Schema{
									SchemaProps: spec.SchemaProps{
										Default: "",
										Type:    []string{"string"},
										Format:  "",
									},
								},
							},
						},
					},
				},
				Required: []string{"serviceRef", "gceResources"},
			},
		},
		Dependencies: []string{
			"github.com/GoogleCloudPlatform/gke-networking-api/apis/serviceloadbalancerstatus/v1.ServiceReference"},
	}
}

func schema_gke_networking_api_apis_serviceloadbalancerstatus_v1_ServiceLoadBalancerStatusStatus(ref common.ReferenceCallback) common.OpenAPIDefinition {
	return common.OpenAPIDefinition{
		Schema: spec.Schema{
			SchemaProps: spec.SchemaProps{
				Description: "ServiceLoadBalancerStatusStatus defines the observed state of ServiceLoadBalancerStatus.",
				Type:        []string{"object"},
			},
		},
	}
}

func schema_gke_networking_api_apis_serviceloadbalancerstatus_v1_ServiceReference(ref common.ReferenceCallback) common.OpenAPIDefinition {
	return common.OpenAPIDefinition{
		Schema: spec.Schema{
			SchemaProps: spec.SchemaProps{
				Description: "ServiceReference contains enough information to let you locate the referenced object.",
				Type:        []string{"object"},
				Properties: map[string]spec.Schema{
					"apiVersion": {
						SchemaProps: spec.SchemaProps{
							Description: "API version of the referent.",
							Type:        []string{"string"},
							Format:      "",
						},
					},
					"kind": {
						SchemaProps: spec.SchemaProps{
							Description: "Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
							Type:        []string{"string"},
							Format:      "",
						},
					},
					"name": {
						SchemaProps: spec.SchemaProps{
							Description: "Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names",
							Default:     "",
							Type:        []string{"string"},
							Format:      "",
						},
					},
				},
				Required: []string{"name"},
			},
		},
	}
}
